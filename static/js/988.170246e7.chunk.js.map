{"version":3,"file":"static/js/988.170246e7.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","myRedux/contacts/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","../node_modules/nanoid/index.browser.js","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  font-size: 40;\n  color: #010101;\n`;\n\nexport const HeaderTwo = styled.h2`\n  color: #686880;\n  margin-bottom: 10px;\n  font-size: 70px;\n  font-weight: 700;\n  text-shadow: ${({ theme }) => theme.shadows.small};\n\n  &:hover {\n    color: #5b5885;\n  }\n`;\nexport const Error = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: red;\n  font-weight: 700;\n\n  margin-top: 30px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.loading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const LabelWrapper = styled.label`\n  margin: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputStyle = styled.input`\n  height: 30px;\n  margin-top: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { InputStyle, LabelWrapper } from './Filter.styled';\nimport { filterContacts } from 'myRedux/contacts/filterSlice';\nimport { selectFilter } from 'myRedux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  return (\n    <LabelWrapper>\n      Find contacts by name:&nbsp;\n      <InputStyle type=\"text\" value={filter} onChange={handleChange} />\n    </LabelWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Paragraph = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const ParaghNumber = styled.p`\n  font-size: 20px;\n`;\n\nexport const List = styled.li`\n  display: flex;\n  margin: 15px 0;\n`;\n\nexport const ButtonSbm = styled.button`\n  display: block;\n\n  padding: 4px;\n  font-size: 16px;\n  font-weight: 600;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  transition: background-color 0.3s, box-shadow 0.3s;\n  background-color: #3498db;\n  color: #fff;\n  box-shadow: ${({ theme }) =>\n    `${theme.shadows.button}, ${theme.shadows.inner}`};\n\n  &:hover {\n    background-color: #2476c7;\n    /* #3488db */\n  }\n\n  &:active {\n    transform: translateY(1px);\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n  }\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport {\n  ButtonSbm,\n  List,\n  ParaghNumber,\n  Paragraph,\n} from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactsThunk } from 'myRedux/contacts/operations';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from 'myRedux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const loading = useSelector(selectIsLoading);\n\n  const getFilterData = () => {\n    return contacts.filter(\n      user =>\n        user.name.toLowerCase().includes(filter.toLowerCase()) ||\n        user.number.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilterData();\n\n  const handleDelete = async id => {\n    dispatch(deleteContactsThunk(id));\n  };\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <List key={id}>\n          <Paragraph>{name}:&nbsp; </Paragraph>\n          <ParaghNumber> {number} &nbsp;</ParaghNumber>\n\n          {loading === id && <Loader />}\n\n          <ButtonSbm\n            onClick={() => handleDelete(id)}\n            type=\"button\"\n            disabled={loading === id}\n          >\n            Delete\n          </ButtonSbm>\n        </List>\n      ))}\n    </ul>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  margin: 10px;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LabelCont = styled.label`\n  margin: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputStyle = styled.input`\n  height: 40px;\n`;\n\nexport const ButtonSbm = styled.button`\n  display: block;\n\n  padding: 10px 20px;\n  font-size: 28px;\n  font-weight: 700;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  transition: background-color 0.3s, box-shadow 0.3s;\n  background-color: #3498db;\n  color: #fff;\n  box-shadow: ${({ theme }) =>\n    `${theme.shadows.button}, ${theme.shadows.inner}`};\n\n  margin: 5px;\n\n  &:hover {\n    background-color: #2476c7;\n    /* #3488db */\n  }\n\n  &:active {\n    transform: translateY(1px);\n    box-shadow: ${({ theme }) => theme.shadows.hover};\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport React, { useState } from 'react';\nimport { ButtonSbm, FormContainer, InputStyle, LabelCont } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'myRedux/contacts/selectors';\nimport { addContactsThunk } from 'myRedux/contacts/operations';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newObject = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const isNameExists = contacts.some(\n      contact => contact.name.toLowerCase() === newObject.name.toLowerCase()\n    );\n\n    if (!isNameExists) {\n      dispatch(addContactsThunk(newObject));\n      setName('');\n      setNumber('');\n    } else {\n      alert(\n        `The contact with the name \"${newObject.name}\" already exists. Please choose a different name.`\n      );\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <LabelCont>\n        Name: &nbsp;\n        <InputStyle\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          required\n        />\n      </LabelCont>\n      <LabelCont>\n        Number: &nbsp;\n        <InputStyle\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          required\n        />\n      </LabelCont>\n      <ButtonSbm>Add contact</ButtonSbm>\n    </FormContainer>\n  );\n};\n","import { Suspense } from 'react';\n\nimport { Error, HeaderTwo, MainContainer } from './Contacts.styled';\n\nimport { selectError, selectIsLoading } from 'myRedux/contacts/selectors';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchNameThunk } from 'myRedux/contacts/operations';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Form } from 'components/Form/Form';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchNameThunk());\n  }, [dispatch]);\n\n  return (\n    <Suspense>\n      <MainContainer>\n        {loading && <Loader />}\n        <HeaderTwo>Phonebook</HeaderTwo>\n        <Form />\n\n        <HeaderTwo>Contacts</HeaderTwo>\n        <Filter />\n        {loading && <Loader />}\n        {error && <Error>Something went wrong...</Error>}\n        <ContactsList />\n      </MainContainer>\n    </Suspense>\n  );\n};\n\nexport default Contacts;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","HeaderTwo","_templateObject2","_ref","theme","shadows","small","Error","_templateObject3","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","loading","selectError","error","createSelector","item","name","toLowerCase","includes","LabelWrapper","InputStyle","Filter","dispatch","useDispatch","useSelector","_jsxs","children","_jsx","type","value","onChange","event","filterContacts","target","Paragraph","ParaghNumber","List","ButtonSbm","_templateObject4","concat","button","inner","_ref2","hover","ContactsList","filteredContacts","user","number","handleDelete","_asyncToGenerator","_regeneratorRuntime","_callee","id","_context","prev","next","deleteContactsThunk","stop","_x","apply","arguments","map","Loader","onClick","disabled","nanoid","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","FormContainer","LabelCont","Form","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","e","_e$target","onSubmit","preventDefault","newObject","some","contact","alert","addContactsThunk","required","useEffect","fetchNameThunk","Suspense"],"sourceRoot":""}